#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main *:6445
    mode	tcp
    default_backend             haproxy

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend haproxy
    balance     roundrobin
    mode	tcp
    server  kube-api1 192.168.1.11:6443 check
    server  kube-api2 192.168.1.8:6443 check
    server  kube-api3 192.168.1.10:6443 check

#---------------------------------------------------------------------
# Ingress frontend
#---------------------------------------------------------------------
frontend  ingress *:80
    mode        tcp
    default_backend             ingress-be

#---------------------------------------------------------------------
# Ingress backend
#---------------------------------------------------------------------
backend ingress-be
    mode        tcp
    balance     roundrobin
    server  ingress-1 192.168.1.11:880 check
    server  ingress-2 192.168.1.8:880 check
    server  ingress-3 192.168.1.10:880 check


