apiVersion: v1
kind: Service
metadata:
  namespace: kafka-test
  name: kafka-hs
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: server
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: v1
kind: Service
metadata:
  namespace: kafka-test
  name: kafka-broker
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: client
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  namespace: kafka-test
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: kafka-test
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-broker
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: kafka
    spec:
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            - labelSelector:
#                matchExpressions:
#                  - key: "app"
#                    operator: In
#                    values:
#                    - zk
#              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kafka-broker
        imagePullPolicy: IfNotPresent
        image: "confluentinc/cp-kafka"
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zk-0.zk-kafka:2181,zk-1.zk-kafka:2181,zk-2.zk-kafka:2181"
        - name:  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://broker:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        resources:
          requests:
            memory: "2Gi"
            cpu: "0.1"
        ports:
        - containerPort: 9092
          name: client
        command:
        - sh
        - -c
        - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-${HOSTNAME##*-}.kafka-broker:9092 KAFKA_BROKER_ID=${HOSTNAME##*-} /etc/confluent/docker/run"
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/kafka
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
      namespace: kafka-test
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: noreplica
      resources:
        requests:
          storage: 100Gi

