---
# rook-operator-wait-resources
apiVersion: batch/v1
kind: Job
metadata:
  name: rook-operator-wait-resources
  annotations:
    helm.sh/hook: post-install
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: rook-operator-wait-resources
    chart: "rook-v0.7.0-136.gd13bc83"
spec:
  template:
    metadata:
      labels:
        app: rook-operator-wait-resources
        chart: "rook-v0.7.0-136.gd13bc83"
    spec:
      containers:
        - name: hyperkube
          image: "k8s.gcr.io/hyperkube:v1.7.12"
          imagePullPolicy: "IfNotPresent"
          command:
            - ./kubectl
            - get
            - customresourcedefinitions
            - clusters.rook.io
            - pools.rook.io
            - objectstores.rook.io
            - filesystems.rook.io
            - volumeattachments.rook.io
      restartPolicy: OnFailure
      serviceAccountName: rook-operator
MANIFEST:

---
# Source: rook/templates/psp.yaml
# PSP for rook-operator

# Most of the teams follow the kubernetes docs and have these PSPs.
# * priviledged (for kube-system namespace)
# * restricted (for all logged in users)
#
# If we name it as `rook-operator`, it comes next to `restricted` PSP alphabetically,
# and applies `restricted` capabilities to `rook-system`. Thats reason this is named with `00-rook-operator`,
# so it stays somewhere close to top and `rook-system` gets the intended PSP.
#
# More info on PSP ordering : https://kubernetes.io/docs/concepts/policy/pod-security-policy/#policy-order

apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: 00-rook-operator
spec:
  fsGroup:
    rule: RunAsAny
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
  allowedCapabilities:
  - '*'
  hostPID: true
  hostIPC: true
  hostNetwork: true
---
# Source: rook/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    operator: rook
    chart: "rook-v0.7.0-136.gd13bc83"
  name: rook-operator
---
# Source: rook/templates/resources.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: filesystems.rook.io
spec:
  group: rook.io
  names:
    kind: Filesystem
    listKind: FilesystemList
    plural: filesystems
    singular: filesystem
  scope: Namespaced
  version: v1alpha1
---
# Source: rook/templates/resources.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: objectstores.rook.io
spec:
  group: rook.io
  names:
    kind: ObjectStore
    listKind: ObjectStoreList
    plural: objectstores
    singular: objectstore
  scope: Namespaced
  version: v1alpha1
---
# Source: rook/templates/resources.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pools.rook.io
spec:
  group: rook.io
  names:
    kind: Pool
    listKind: PoolList
    plural: pools
    singular: pool
  scope: Namespaced
  version: v1alpha1
---
# Source: rook/templates/resources.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: volumeattachments.rook.io
spec:
  group: rook.io
  names:
    kind: VolumeAttachment
    listKind: VolumeAttachmentList
    plural: volumeattachments
    singular: volumeattachment
  scope: Namespaced
  version: v1alpha1
---
# Source: rook/templates/resources.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusters.rook.io
spec:
  group: rook.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  version: v1alpha1
---
# Source: rook/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: rook-operator
  labels:
    operator: rook
    chart: "rook-v0.7.0-136.gd13bc83"
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  - secrets
  - pods
  - services
  - nodes
  - nodes/proxy
  - configmaps
  - events
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - extensions
  resources:
  - deployments
  - daemonsets
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  resourceNames:
  - clusters.rook.io
  - pools.rook.io
  - objectstores.rook.io
  - filesystems.rook.io
  - volumeattachments.rook.io
  verbs:
  - get
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - rook.io
  resources:
  - "*"
  verbs:
  - "*"
---
# Source: rook/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: rook-operator-psp-user
  labels:
    operator: rook
    chart: "rook-v0.7.0-136.gd13bc83"
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - 00-rook-operator
  verbs:
  - use
---
# Source: rook/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: rook-operator
  labels:
    operator: rook
    chart: "rook-v0.7.0-136.gd13bc83"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-operator
subjects:
- kind: ServiceAccount
  name: rook-operator
  namespace: rook-system
---
# Source: rook/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: rook-operator-psp-users
  labels:
    operator: rook
    chart: "rook-v0.7.0-136.gd13bc83"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-operator-psp-user
subjects:
- kind: ServiceAccount
  name: rook-operator
  namespace: rook-system
- kind: ServiceAccount
  name: rook-agent
  namespace: rook-system
---
# Source: rook/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: rook-operator
  labels:
    operator: rook
    chart: "rook-v0.7.0-136.gd13bc83"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-operator
  template:
    metadata:
      labels:
        app: rook-operator
        chart: "rook-v0.7.0-136.gd13bc83"
    spec:
      containers:
      - name: rook-operator
        image: "rook/rook:v0.7.0-136.gd13bc83"
        imagePullPolicy: IfNotPresent
        args:
          - operator
        env:
        - name: ROOK_LOG_LEVEL
          value: INFO
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROOK_MON_HEALTHCHECK_INTERVAL
          value: 45s
        - name: ROOK_MON_OUT_TIMEOUT
          value: 300s
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
          
      serviceAccountName: rook-operator
